import logger from '../../../utils/logger.js';
import { LLMClient } from '../LLMClient.js';

/**
 * ‰ø°ÊÅØÊ£ÄÁ¥¢ÂëòÊô∫ËÉΩ‰Ωì - ‰ºòÂåñÁâà
 * ‰∏ìÈó®Ë¥üË¥£‰ªéÊêúÁ¥¢ÁªìÊûú‰∏≠ÊèêÂèñ„ÄÅÂàÜÊûêÂíåÁªìÊûÑÂåñÂÖ≥ÈîÆ‰ø°ÊÅØ
 * ‰ΩøÁî®ÂçïÊ¨°LLMË∞ÉÁî®ÂÆåÊàêÁªºÂêà‰ø°ÊÅØÊ£ÄÁ¥¢
 */
export class RetrievalAgent {
  constructor(config = {}) {
    this.config = {
      maxContentLength: 50000,
      extractionTimeout: 60000,
      minConfidence: 0.6,
      enableDeepExtraction: true,
      ...config
    };
    
    // ÂàùÂßãÂåñLLMÂÆ¢Êà∑Á´ØÔºå‰ºòÂÖà‰ΩøÁî®‰º†ÂÖ•ÁöÑLLMÂÆû‰æã
    if (config.llmInstance) {
      this.llm = config.llmInstance;
    } else {
      this.llm = new LLMClient(config.llm);
    }
    this.extractionHistory = [];
    this.knowledgeBase = new Map();
  }

  /**
   * ÊâßË°å‰ø°ÊÅØÊ£ÄÁ¥¢‰ªªÂä° - ‰ºòÂåñ‰∏∫ÂçïÊ¨°LLMË∞ÉÁî®
   */
  async execute(task) {
    logger.info('üìö ‰ø°ÊÅØÊ£ÄÁ¥¢ÂëòÂºÄÂßãÊâßË°å‰ªªÂä°...');
    
    try {
      const {
        searchResults,
        requiredDataTypes = ['financial', 'market', 'technical'],
        topic,
        subTopics = []
      } = task;
      
      // ÂçïÊ¨°LLMË∞ÉÁî®ÂÆåÊàêÊâÄÊúâÊ£ÄÁ¥¢Áõ∏ÂÖ≥Â∑•‰Ωú
      const comprehensiveExtractionResult = await this.performComprehensiveExtraction(
        searchResults, requiredDataTypes, topic, subTopics
      );
      
      logger.debug(`ÂçïÊ¨°LLMÂÆåÊàêÁªºÂêà‰ø°ÊÅØÊ£ÄÁ¥¢`);
      
      // Âü∫‰∫éÁªºÂêàÁªìÊûúÁîüÊàêÁªìÊûÑÂåñÊï∞ÊçÆ
      const structuredData = this.generateStructuredDataFromExtraction(comprehensiveExtractionResult);
      
      logger.success(`‚úÖ ‰ø°ÊÅØÊ£ÄÁ¥¢ÂÆåÊàêÔºåËé∑Âæó ${structuredData.length} Êù°ÁªìÊûÑÂåñÊï∞ÊçÆ`);
      
      return {
        data: structuredData,
        knowledgeGraph: comprehensiveExtractionResult.knowledgeGraph,
        report: comprehensiveExtractionResult.retrievalReport,
        extractionPlan: comprehensiveExtractionResult.extractionPlan,
        metadata: {
          sourceCount: searchResults.length,
          extractedDocs: comprehensiveExtractionResult.extractedContent?.length || 0,
          structuredRecords: structuredData.length,
          categories: comprehensiveExtractionResult.categories || [],
          extractionTime: new Date(),
          llmCalls: 1 // ‰ºòÂåñÂêéÂè™Áî®‰∫Ü1Ê¨°LLMË∞ÉÁî®
        }
      };
      
    } catch (error) {
      logger.error('‚ùå ‰ø°ÊÅØÊ£ÄÁ¥¢Â§±Ë¥•:', error);
      throw new Error(`‰ø°ÊÅØÊ£ÄÁ¥¢‰ªªÂä°ÊâßË°åÂ§±Ë¥•: ${error.message}`);
    }
  }

  /**
   * ÂçïÊ¨°LLMË∞ÉÁî®ÂÆåÊàêÁªºÂêà‰ø°ÊÅØÊ£ÄÁ¥¢
   */
  async performComprehensiveExtraction(searchResults, requiredDataTypes, topic, subTopics) {
    const prompt = `‰Ωú‰∏∫‰∏ì‰∏öÁöÑ‰ø°ÊÅØÊ£ÄÁ¥¢‰∏éÂàÜÊûê‰∏ìÂÆ∂ÔºåËØ∑ÂØπ‰ª•‰∏ãÊêúÁ¥¢ÁªìÊûúËøõË°åÁªºÂêàÊÄß‰ø°ÊÅØÊ£ÄÁ¥¢‰∏éÂàÜÊûêÔºö

**ÂàÜÊûêÂèÇÊï∞**Ôºö
- ‰∏ªÈ¢ò: ${topic}
- Â≠ê‰∏ªÈ¢ò: ${subTopics.join(', ') || 'Êó†'}
- ÈúÄË¶ÅÁöÑÊï∞ÊçÆÁ±ªÂûã: ${requiredDataTypes.join(', ')}
- ÊêúÁ¥¢ÁªìÊûúÊï∞Èáè: ${searchResults.length}

**ÊêúÁ¥¢ÁªìÊûúËØ¶ÁªÜ‰ø°ÊÅØ**Ôºö
${searchResults.slice(0, 15).map((result, idx) => `
${idx + 1}. Ê†áÈ¢ò: ${result.title}
   Êù•Ê∫ê: ${result.source}
   URL: ${result.url}
   ÂÜÖÂÆπÊëòË¶Å: ${result.snippet || 'Êó†ÊëòË¶Å'}
   ÂèëÂ∏ÉÊó∂Èó¥: ${result.publishDate || 'Êú™Áü•'}
   Áõ∏ÂÖ≥ÊÄßËØÑÂàÜ: ${result.llm_evaluation?.overall || 'N/A'}`).join('\n')}

**‰ªªÂä°Ë¶ÅÊ±Ç**Ôºö
1. ‰ªéÊêúÁ¥¢ÁªìÊûú‰∏≠ÊèêÂèñÂÖ≥ÈîÆ‰ø°ÊÅØÂíåÊï∞ÊçÆÁÇπ
2. ÂØπ‰ø°ÊÅØËøõË°åÂàÜÁ±ªÂíåÁªìÊûÑÂåñ
3. ÊûÑÂª∫Áü•ËØÜÂõæË∞±Ë°®Á§∫ÂÖ≥Á≥ª
4. ÁîüÊàêÊ£ÄÁ¥¢ÂàÜÊûêÊä•Âëä

ËØ∑ËæìÂá∫JSONÊ†ºÂºèÁöÑÁªºÂêàÁªìÊûúÔºö
{
  "extractionPlan": {
    "strategy": "direct_content_analysis",
    "priority_data_types": ["ÊåâÈáçË¶ÅÊÄßÊéíÂ∫èÁöÑÊï∞ÊçÆÁ±ªÂûã"],
    "extraction_focus": ["ÈáçÁÇπÊèêÂèñÁöÑ‰ø°ÊÅØÁ±ªÂûã"],
    "quality_control_criteria": ["Ë¥®ÈáèÊéßÂà∂Ê†áÂáÜ"]
  },
  "categorizedInfo": {
    "Á±ªÂà´1": {
      "items": [
        {
          "title": "ÊñáÊ°£Ê†áÈ¢ò",
          "source": "Êù•Ê∫ê",
          "url": "ÈìæÊé•Âú∞ÂùÄ",
          "summary": "ÂÜÖÂÆπÊëòË¶Å",
          "key_topics": ["‰∏ªË¶ÅËØùÈ¢ò"],
          "extracted_data": {
            "facts": ["ÂÖ≥ÈîÆ‰∫ãÂÆû"],
            "metrics": ["ÈáçË¶ÅÊåáÊ†á"],
            "insights": ["Ê¥ûÂØüÁÇπ"]
          },
          "confidence": 0.85
        }
      ],
      "category_summary": "Á±ªÂà´ÊÄªÁªì"
    }
  },
  "structuredData": [
    {
      "fact_type": "Êï∞ÊçÆÁ±ªÂûã",
      "description": "‰∫ãÂÆûÊèèËø∞",
      "value": "ÂÖ∑‰ΩìÊï∞ÂÄº",
      "confidence": 0.85,
      "source_title": "Êù•Ê∫êÊ†áÈ¢ò",
      "source_url": "Êù•Ê∫êÈìæÊé•",
      "category": "ÊâÄÂ±ûÁ±ªÂà´"
    }
  ],
  "knowledgeGraph": {
    "nodes": [
      {
        "id": "ËäÇÁÇπID",
        "label": "ËäÇÁÇπÊ†áÁ≠æ",
        "type": "entity/concept/data",
        "properties": {
          "importance": 0.85,
          "source_count": 2
        }
      }
    ],
    "edges": [
      {
        "source": "Ê∫êËäÇÁÇπID",
        "target": "ÁõÆÊ†áËäÇÁÇπID",
        "relationship": "ÂÖ≥Á≥ªÁ±ªÂûã",
        "weight": 0.8
      }
    ],
    "insights": [
      {
        "insight": "Ê¥ûÂØüÊèèËø∞",
        "supporting_sources": ["ÊîØÊåÅÊù•Ê∫ê"],
        "confidence": 0.9
      }
    ]
  },
  "retrievalReport": {
    "extraction_summary": {
      "total_sources_processed": ${searchResults.length},
      "successful_extractions": "ÊàêÂäüÊèêÂèñÊï∞",
      "data_quality_assessment": "Êï∞ÊçÆË¥®ÈáèËØÑ‰º∞"
    },
    "content_analysis": {
      "main_themes_identified": ["ËØÜÂà´ÁöÑ‰∏ªË¶Å‰∏ªÈ¢ò"],
      "data_distribution": "Êï∞ÊçÆÂàÜÂ∏ÉÊÉÖÂÜµ"
    },
    "quality_metrics": {
      "overall_confidence": 0.85,
      "data_completeness": 0.80,
      "source_credibility": 0.90
    }
  }
}`;

    try {
      const response = await this.llm.generate(prompt, {
        temperature: 0.2,
        max_tokens: 6000
      });
      
      const result = this.parseJSONResponse(response.content);
      
      if (result) {
        // Ê∑ªÂä†ÂÖÉÊï∞ÊçÆ
        if (result.knowledgeGraph) {
          result.knowledgeGraph.metadata = {
            topic,
            subTopics,
            nodeCount: result.knowledgeGraph.nodes?.length || 0,
            edgeCount: result.knowledgeGraph.edges?.length || 0,
            createdAt: new Date()
          };
        }
        
        return {
          extractionPlan: result.extractionPlan || this.getDefaultExtractionPlan(),
          categorizedInfo: result.categorizedInfo || {},
          structuredData: result.structuredData || [],
          knowledgeGraph: result.knowledgeGraph || this.generateBasicKnowledgeGraph(topic),
          retrievalReport: result.retrievalReport || this.generateBasicReport([]),
          categories: Object.keys(result.categorizedInfo || {}),
          extractedContent: this.extractContentFromCategories(result.categorizedInfo || {})
        };
      }
    } catch (error) {
      logger.warn('LLMÁªºÂêà‰ø°ÊÅØÊ£ÄÁ¥¢Â§±Ë¥•Ôºå‰ΩøÁî®ÈªòËÆ§ÁªìÊûú:', error);
    }
    
    // ÈôçÁ∫ßÂà∞ÈªòËÆ§ÁªìÊûú
    return {
      extractionPlan: this.getDefaultExtractionPlan(),
      categorizedInfo: { 'general': { items: [], category_summary: 'ÈÄöÁî®Á±ªÂà´' } },
      structuredData: [],
      knowledgeGraph: this.generateBasicKnowledgeGraph(topic),
      retrievalReport: this.generateBasicReport([]),
      categories: ['general'],
      extractedContent: []
    };
  }

  /**
   * ‰ªéÁªºÂêàÁªìÊûúÁîüÊàêÁªìÊûÑÂåñÊï∞ÊçÆ
   */
  generateStructuredDataFromExtraction(extractionResult) {
    const structuredData = [];
    
    // Áõ¥Êé•‰ΩøÁî®LLMÊèêÂèñÁöÑÁªìÊûÑÂåñÊï∞ÊçÆ
    if (extractionResult.structuredData && Array.isArray(extractionResult.structuredData)) {
      extractionResult.structuredData.forEach((item, index) => {
        structuredData.push({
          id: this.generateRecordId(),
          category: item.category || 'general',
          source: {
            title: item.source_title || 'Êú™Áü•Êù•Ê∫ê',
            url: item.source_url || '',
            relevanceScore: item.confidence || 0.5
          },
          structuredData: {
            structured_facts: [{
              fact_type: item.fact_type || 'general',
              description: item.description || '',
              value: item.value || '',
              confidence: item.confidence || 0.5
            }]
          },
          extractedAt: new Date(),
          confidence: item.confidence || 0.5
        });
      });
    }
    
    return structuredData;
  }

  /**
   * ‰ªéÂàÜÁ±ª‰ø°ÊÅØ‰∏≠ÊèêÂèñÂÜÖÂÆπ
   */
  extractContentFromCategories(categorizedInfo) {
    const extractedContent = [];
    
    Object.entries(categorizedInfo).forEach(([category, categoryData]) => {
      if (categoryData.items && Array.isArray(categoryData.items)) {
        categoryData.items.forEach(item => {
          extractedContent.push({
            title: item.title || '',
            source: item.source || '',
            url: item.url || '',
            analyzedContent: {
              content_summary: item.summary || '',
              key_topics: item.key_topics || [],
              extracted_data: item.extracted_data || {},
              quality_score: item.confidence || 0.5
            },
            category: category
          });
        });
      }
    });
    
    return extractedContent;
  }

  // ËæÖÂä©ÊñπÊ≥ï
  parseJSONResponse(content) {
    try {
      const jsonMatch = content.match(/\{[\s\S]*\}/);
      if (jsonMatch) {
        return JSON.parse(jsonMatch[0]);
      }
      return JSON.parse(content);
    } catch (error) {
      logger.warn('JSONËß£ÊûêÂ§±Ë¥•:', error);
      return null;
    }
  }

  generateRecordId() {
    return `record_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }

  getDefaultExtractionPlan() {
    return {
      strategy: 'direct_content_analysis',
      priority_data_types: ['market', 'financial', 'technical'],
      extraction_focus: ['key_facts', 'metrics', 'trends', 'insights'],
      quality_control_criteria: ['credibility', 'relevance', 'freshness']
    };
  }

  generateBasicKnowledgeGraph(topic) {
    return {
      nodes: [
        {
          id: 'main_topic',
          label: topic,
          type: 'concept',
          properties: { importance: 1.0, source_count: 1 }
        }
      ],
      edges: [],
      insights: [
        {
          insight: `ÂÖ≥‰∫é${topic}ÁöÑÂü∫Á°ÄÁü•ËØÜÂõæË∞±Â∑≤ÊûÑÂª∫`,
          supporting_sources: ['search_results'],
          confidence: 0.5
        }
      ],
      metadata: {
        topic,
        nodeCount: 1,
        edgeCount: 0,
        createdAt: new Date()
      }
    };
  }

  generateBasicReport(data) {
    return {
      extraction_summary: {
        total_sources_processed: data.length,
        successful_extractions: data.length,
        data_quality_assessment: 'ËâØÂ•Ω'
      },
      content_analysis: {
        main_themes_identified: ['‰∏ªË¶Å‰∏ªÈ¢ò'],
        data_distribution: 'ÂàÜÂ∏ÉÂùáÂåÄ'
      },
      quality_metrics: {
        overall_confidence: 0.7,
        data_completeness: 0.7,
        source_credibility: 0.8
      }
    };
  }

  getExtractionHistory() {
    return this.extractionHistory;
  }

  clearExtractionHistory() {
    this.extractionHistory = [];
    this.knowledgeBase.clear();
  }
}